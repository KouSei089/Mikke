<div class="flex justify-center">
  <i class="fas fa-calendar text-3xl text-dark-black mr-3 mb-1 shadow-lg"></i>
  <h1 class="far text-3xl"><%= l Time.current, format: :long %></h1>
</div>

<div x-data="{isShow: true}" class="bg-white rounded px-8 pt-6 pb-8 mb-4">
  <!-- This is an example component -->
    <div class="flex justify-center mb-2">
        <label for="toogleButton" class="flex items-center cursor-pointer">
            <div class="px-2">タイマー</div>
        <!-- toggle -->
        <div class="relative">
          <input id="toogleButton" type="checkbox" class="hidden" @click="isShow = !isShow" />
          <!-- path -->
          <div
            class="toggle-path bg-light-blue w-9 h-5 rounded-full shadow-inner"
          ></div>
          <!-- crcle -->
          <div
            class="toggle-circle absolute w-3.5 h-3.5 bg-white rounded-full shadow"
          ></div>
        </div>
      </label>
    </div>
  <form name="timer">
    <div x-show="isShow" class="flex items-center justify-center mb-3 po-0">
      <input type="tel" value="10" maxlength="2" oninput="value = value.replace(/[^0-9]+/i,'');" class="bg-dark-black  border rounded w-12 py-2 px-3 text-natural shadow-lg border-white focus:border-white focus:ring focus:ring-white far mx-4">
      <input type="tel" value="00" maxlength="2" oninput="value = value.replace(/[^0-9]+/i,'');" class="bg-dark-black  border rounded w-12 py-2 px-3 text-natural shadow-lg border-white focus:border-white focus:ring focus:ring-white far">


      <%= button_tag type: "button", class: "rounded py-1 px-3 bg-dark-black text-natural mx-5 shadow-lg", onclick: "cntStart()" do %>
          <i class="fas fa-play fa-sm shadow-inner"></i>
      <% end %>

      <%= button_tag type: "button", class: "rounded py-1 px-3 bg-dark-black text-natural shadow-lg", onclick: "cntStop()" do %>
          <i class="fas fa-stop fa-sm shadow-inner"></i>
      <% end %>

    </div>
  </form>
</div>

<div class="bg-white rounded px-8 pt-6 pb-8 mb-4">
  <%= form_with model: @diary, local: true do |f| %>
    <div class="mb-4">
      <div class="flex justify-between mb-5">
        <h1 class="text-4xl text-dark-black">筆記開示</h1>
        <%= button_tag type: 'submit', class: "text-6xl text-light-blue" do %>
          <i class="fab fa-telegram-plane"></i>
        <% end %>
      </div>
      <%= f.text_field :title, class: "bg-gray-50 border-white rounded-lg w-full mb-4 py-2 px-3 text-dark-black shadow-inner focus:border-white focus:ring focus:ring-white", placeholder: "タイトル(最後に決めるのをおすすめします)"  %>
      <%= f.text_area :text, class: "bg-gray-50 border-white rounded-lg w-full h-64 py-2 px-3 text-dark-black shadow-inner focus:border-white focus:ring focus:ring-white", onkeyup: "ShowLength(value);" %>
      <!--プログレスバー文字数-->
      <div class="relative pt-1">
        <div class="overflow-hidden h-5 mb-4 text-xs flex rounded bg-indigo-100 shadow-inner">
          <div id="stylewidth" style="width:<%= @diary.creativity %>%" class="shadow-inner flex flex-col text-center whitespace-nowrap text-white justify-center bg-indigo-400"></div>
        </div>
        <span class="absolute right-0 text-dark-black" id="inputpercentage"><%= @diary.creativity %>％</span>
      </div>
      <p id="inputlength"><%= @diary.word_count %>文字</p>
    </div>
  <% end %>
</div>

<script>
var timer1; //タイマーを格納する変数（タイマーID）の宣言

//カウントダウン関数を1000ミリ秒毎に呼び出す関数
function cntStart(){
  document.timer.elements[2].disabled=true;
  timer1=setInterval("countDown()",1000);
}

//タイマー停止関数
function cntStop(){
  document.timer.elements[2].disabled=false;
  clearInterval(timer1);
}

//カウントダウン関数
function countDown(){
  var min=document.timer.elements[0].value;
  var sec=document.timer.elements[1].value;

  if( (min=="") && (sec=="") ){
    alert("時刻を設定してください！");
    reSet();
  }
  else {
    if (min=="") min=0;
    min=parseInt(min);

    if (sec=="") sec=0;
    sec=parseInt(sec);

    tmWrite(min*60+sec-1);
  }
}

//残り時間を書き出す関数
function tmWrite(int){
  int=parseInt(int);

  if (int<=0){
    reSet();
    alert("時間です！");
  }
  else {
    //残り分数はintを60で割って切り捨てる
    document.timer.elements[0].value=Math.floor(int/60);
    //残り秒数はintを60で割った余り
    document.timer.elements[1].value=int % 60;
  }
}

//フォームを初期状態に戻す（リセット）関数
function reSet(){
  document.timer.elements[0].value="0";
  document.timer.elements[1].value="0";
  document.timer.elements[2].disabled=false;
  clearInterval(timer1);
}

//本文の文字数をカウントする関数
function ShowLength(str) {
  document.getElementById("inputpercentage").innerHTML = Math.trunc(str.length / 5) + "%";
  document.getElementById("inputlength").innerHTML = str.length + "文字";
  document.getElementById("stylewidth").style.width = str.length / 10 + "%";
}
</script>
